.TH o2c 1
.UC 5
.SH NAME
o2c \- Oberon-2 to C compiler
.SH SYNOPSIS
.B o2c
.RI [ option ]...
.I filename
.br
.B o2c 
[
.BR -M | --make ] 
.RI [ option ]...
.I module 
.RI [ command ]
.SH DESCRIPTION
.B o2c
has two major modes of operation: compile and make.
.TP 10
.I compile
No option 
.B -M 
or 
.B --make 
is set.  Translates one or more files into
C code.  This is quite fast since no object files are generated,
useful to check a given module for syntactic or semantic errors.
.br
Example: 
.br
.B o2c Hello.Mod 
compiles the module 
.BR Hello .
If no errors are found, the files 
.BR Hello.c , 
.BR Hello.OSym ,
and
.BR Hello.h
are generated (the latter two only if the symbol 
file has changed).
.TP 10
.I make
Option 
.B -M 
or 
.B --make 
is set.  All modules imported directly or 
indirectly by a given main module are recompiled if necessary,
including compilation into 
.I .o 
files.  In a final step the object 
files are linked together to form an executable.
.br
Example: 
.br
.B o2c -M Hello World
generates the executable file
.BR Hello_World .
.B World
is the name of a parameterless procedure exported by module
.BR Hello .
It's called right after the module initialization.
In the terminology of the Oberon System it would be
a command.  
.br
.B o2c -M o2c
generates the executable 
.BR o2c .
Since the startup code of module 
.B o2c
doesn't terminate, no special command has to be executed.
.PP
Errors are reported like this:
.RS 5
In file lib/Hello.Mod:
.br
14:139 ';' expected
.RE
.br
The first number is the error's position in the source code,
i.e. file 
.IR lib/Hello.Mod .
It's a character position, not a line
number.  After the colon follow the error number and the error
message.  If you prefer a different output format, e.g. if you'ld like
to read error messages in the source text context, use the filter 
.B o2ef
(see also 
.IR o2ef(1) ).
.PP
.B o2c
uses the following suffixes for its input and output files:
.Sp
.nf
.ta \w'\fB.OSym\fP  'u
\&\fB.Mod\fP      Oberon-2 source
\&\fB.OSym\fP     symbol file
\&\fB.c\fP        intermediate C code
\&\fB.h\fP        intermediate header file
\&\fB.m\fP        marker file, generated for EXTERNAL modules
\&\fB.o\fP        object file, generated by gcc
.fi
.Sp
.PP
The file
.I ~/.o2c.red 
tells the compiler where to search for existing
files and where to create new files, depending on their suffix.  
The file is a list of rules of the form 
.RS 2
	pattern {"," pattern} = path {";" path} [+RCS].
.RE
.I pattern
is a string of characters that may contain
.B ? 
to match a single arbitrary character and
.B *
to match zero or more characters.  E.g. 
.I *.Mod
would match all files ending in 
.IR .Mod .
.br
To locate a file 
.I file
the path lists of the patterns matching 
.I file 
are searched from left to right.  The first path containing the file
.I file
is used. 
If 
.I +RCS 
is set for a source file 
.IR M.Mod ,
RCS files 
.I RCS/M.Mod,v 
or
.I M.Mod,v
will be found in addition to the perfect match
.IR M.Mod .  
The compiler will automatically retrieve the working file 
.I M.Mod 
by calling 
.B co
and will use it as input file.
.br
For files generated 
by the compiler (e.g. symbol files or C code) the first 
path in the list associated with the first matching
pattern will be used to store the file. 
.PP
If file paths stored in 
.I ~/.o2c.red
are relative to a directory, the compiler (and the browser) must 
be executed in this directory.  Otherwise the compiler will complain 
about files not found.
.SH OPTIONS
Single character options may be grouped together.  
.B -MA
is equivalent to 
.B -M -A
or
.B --make 
.BR --all .
.TP
.B --make, -M
Make an executable.  The main module and all modules it
depends on are checked for consistency and are recompiled if
necessary.  
.B gcc 
is called to generate the object files and to
build an executable.  
.TP
.B --all, -A
Force (re-)compilation of all imported modules.  Ignored
unless
.B --make
is set.
.TP
.B --makefile <file>
Write a makefile for the given module into file 
.IR <file> .
No compilation will be done. 
.TP
.B --warn, -W
Print additional warnings.  Without this option only errors
will be reported. 
.TP
.B --redir <file>
Use 
.I <file>
as redirection table (instead of the default
.IR ~/.o2c.red ). 
.TP
.B --help, -h
Give a summary on how to call the compiler.
.TP
.B --version, -V      
Print compiler version.
.TP
.B --verbose, -v     
Print calls to 
.B co
or
.B gcc
and recompilation steps.  Useful
in connection with 
.BR --make .
.TP
.B -a
Disable assertions.  Any calls to the predefined function
.B ASSERT
will be ignored.
.TP
.B -R
Normally the compiler will produce code to detect the following
illegal program states:
 - a function is left without a return statement
.br
 - a CASE expression does not match any label
.br
 - a NIL pointer is being dereferenced
.br
 - an array index is out of range
.br
 - a SET index is out of range
.br
 - RECORD assigment fails
.br
 - a type guard or test is applied to a NIL pointer
.br
 - a type guard fails
.br
 - all guards of a WITH statement fail
.br
The option
.B -R
will disable all those checks.
.br
Note: These checks are fairly expensive, since all of them are
performed on C level.
.TP
.B -O
Optimize code, i.e. set 
.I -O2 
when calling 
.BR gcc .
.TP
.B --usegc
Include support for 
.B gc
package.  This overrides the compiler's default setting.  
.B o2c
has to be compiled with the correct path to the 
.B
gc
library.  Note: It's dangerous to mix 
.I .o
files that are compiled for 
.B gc
with ones that are not.
.TP
.B --nogc
Disable support for
.B gc
package.  This overrides the compiler's default setting.  
Note: It's dangerous to mix 
.I .o
files that aren't compiled for 
.B gc
with ones that are.
.TP
.B -g
Include debug information on C level, i.e. set 
.I -g3
when calling
.BR gcc . 
.TP
.B -s
Strip executable.  Don't use this together with 
.B -g
since 
.B -s
will cancel the effects of 
.BR -g .
.TP
.B -p
Include profiler information (for 
.BR gprof ).
.TP
.B --cflags <string>
Pass
.I <string>
as parameter(s) to the C compiler.
.TP
.B --ldflags <string>
Pass 
.I <string> 
as parameter(s) to the linker.
.PP
The options 
.BR -a , 
.BR -R , 
.BR -O , 
.BR -g , 
.BR -s , 
.BR -p , 
.BR --cflags ,
and
.B --ldflags
will only take effect during a 
.IR make , 
in particular only for those files that
are compiled by 
.B gcc 
while these options are set.  If you want to
make sure that these options are in effect for all modules, use the
options  
.B --make
.BR --all ,
or
.B -MA 
for short, to recompile all modules.
.SH FILES
.nf
.ta \w'ErrorList.txtXXXX'u
~/.o2c.red		path list
ErrorList.txt		error messages
file.Mod		Oberon-2 source file
file.OSym		symbol file
file.c		intermediate C file
file.h		intermediate header file
file.o		object file
file.m		stores time of last compilation of EXTERNAL
.Sp
.fi
.SH DIAGNOSTICS
The exit status is non zero if and only if an error occured during compilation.
.SH SEE ALSO
o2b(1), o2ef(1), o2whereis(1)
.SH AUTHORS
Michael van Acken, Juergen Zimmermann